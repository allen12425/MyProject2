过程：无锁状态------------>偏向锁 ------------>轻量级锁------------->重量级锁
1.默认jvm延迟4秒后自动开启偏向锁（启动jvm时会有较多的线程同步所以这个阶段没必要启动偏向锁）
设置参数：-XX:BiasedLockingStartupDelay = 0

2.当存在线程竞争时偏向锁升级为轻量级锁（也叫自旋锁）
3.某个线程自旋次数超过10次或自旋的线程数超过了cpu核数的二分之一时升级为重量级锁

synchronized 和volatile的底层都是lock

四、volatile和synchronized的区别

volatile本质是在告诉jvm当前变量在寄存器（工作内存）中的值是不确定的，需要从主存中读取； synchronized则是锁定当前变量，只有当前线程可以访问该变量，其他线程被阻塞住。
volatile仅能使用在变量级别；synchronized则可以使用在变量、方法、和类级别的
volatile仅能实现变量的修改可见性，不能保证原子性；而synchronized则可以保证变量的修改可见性和原子性
volatile不会造成线程的阻塞；synchronized可能会造成线程的阻塞。
volatile标记的变量不会被编译器优化；synchronized标记的变量可以被编译器优化


面试准备项：
一、
1.JVM
2.算法与数据结构
3.多线程
4.DP
5.Redis
6.Zookeeper
7.MySQL进阶调优
二、
1.Netty->RPC->Micro service
2.Spring系列源码
3.JDK源码，HotSpot源码,Linux,算法,网络底层
4.项目
5.掌握架构层面的知识